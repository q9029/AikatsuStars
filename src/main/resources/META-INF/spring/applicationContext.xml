<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="com.github.q9029.starstrade"/>
	<context:annotation-config/>
	<context:property-placeholder/>

	<mvc:annotation-driven/>
	<mvc:resources mapping="/css/**" location="/WEB-INF/css/"/>
	<mvc:resources mapping="/img/**" location="/WEB-INF/img/"/>
	<mvc:resources mapping="/js/**" location="/WEB-INF/js/"/>

	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/view/"/>
		<beans:property name="suffix" value=".jsp"/>
	</beans:bean>

	<!-- Properties -->
	<!-- プロパティは作成せず、環境変数もしくはDBから取得する
	<beans:bean id="properties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<beans:property name="locations">
			<beans:list>
				<beans:value>classpath:app.properties</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	-->

	<!-- DatabaseAccess -->
	<beans:bean id="databaseUrl" class="java.net.URI">
		<beans:constructor-arg value="${DATABASE_URL}"/>
	</beans:bean>
	<beans:bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<beans:property name="driverClassName" value="org.postgresql.Driver"/>
		<beans:property name="url" value="#{'jdbc:postgresql://' + @databaseUrl.getHost() + ':' + @databaseUrl.getPort() + @databaseUrl.getPath()}"/>
		<beans:property name="username" value="#{@databaseUrl.getUserInfo().split(':')[0]}"/>
		<beans:property name="password" value="#{@databaseUrl.getUserInfo().split(':')[1]}"/>
		<beans:property name="initialSize" value="5"/>
		<beans:property name="maxTotal" value="20"/>
		<beans:property name="maxIdle" value="5"/>
		<beans:property name="maxWaitMillis" value="1000"/>
		<beans:property name="validationQuery" value="SELECT 1"/>
	</beans:bean>

	<!-- TransactionManager -->
	<aop:aspectj-autoproxy/>
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory"/>
	</beans:bean>
	<aop:config>
		<aop:advisor pointcut="execution(* com.github.q9029.starstrade.service.*.*(..))" advice-ref="transactionAdvice"/>
	</aop:config>
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- TODO add setting read-only transaction -->
			<tx:method name="*" rollback-for="java.lang.Exception"/>
		</tx:attributes>
	</tx:advice>

	<beans:bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="mappingLocations">
			<beans:list>
				<beans:value>classpath:META-INF/hibernate/*.hbm.xml</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<!-- 必要な設定か検証する
				<beans:prop key="hibernate.query.substitutions">true 1, false 0</beans:prop>
				-->
			</beans:props>
		</beans:property>
	</beans:bean>

	<!-- ProxyLogging -->
	<aop:config>
		<aop:aspect ref="procTimeProxy">
			<aop:pointcut id="pointcutController" expression="execution(* com.github.q9029.starstrade.controller.*.*(..))"/>
			<aop:around pointcut-ref="pointcutController" method="around"/>
		</aop:aspect>
		<aop:aspect ref="loggingProxy">
			<aop:pointcut id="pointcutController" expression="execution(* com.github.q9029.starstrade.controller.*.*(..))"/>
			<aop:before pointcut-ref="pointcutController" method="before"/>
			<aop:after pointcut-ref="pointcutController" method="after"/>
			<aop:pointcut id="pointcutService" expression="execution(* com.github.q9029.starstrade.service.*.*(..))"/>
			<aop:before pointcut-ref="pointcutService" method="before"/>
			<aop:after pointcut-ref="pointcutService" method="after"/>
			<aop:pointcut id="pointcutDao" expression="execution(* com.github.q9029.starstrade.repository.*.*(..))"/>
			<aop:before pointcut-ref="pointcutDao" method="before"/>
			<aop:after pointcut-ref="pointcutDao" method="after"/>
		</aop:aspect>
	</aop:config>
</beans:beans>
